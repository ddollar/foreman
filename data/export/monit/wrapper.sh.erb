#!/bin/bash

PID_FILE=${PID_FILE:-/var/run/<%= app %>/<%= process.name %>.pid}
LOG_FILE=${LOG_FILE:-<%= log %>/<%= process.name %>.log}

STATUS_RUNNING=0
STATUS_DEAD_WITH_PID=1
STATUS_UNKNOWN=4

function checkpid() {
    [ -z $1 ] && return 1
    [ -d /proc/$1 ] && return 0
    return 1
}

function start() {
    echo -n "Starting process $0 ..."
    if [ -s $PID_FILE ]
    then
      read pid < $PID_FILE
      if checkpid $pid 2>&1; then
          echo "[FAIL] process with PID ${pid} is running."
          exit $STATUS_UNKNOWN
      fi
    fi

    exec <%= process.command %> >> $LOG_FILE 2>&1 &

    if [ $? -eq 0 ]; then
        echo $! > $PID_FILE
        echo "[OK]"
    else
        echo "[FAIL]"
        exit $STATUS_UNKNOWN
    fi
}

function stop() {
    echo -n "Terminating process $0 ..."
    GRACE_TIME=${GRACE_TIME:-40}
    if [ -f $PID_FILE ]; then
      PID=`cat $PID_FILE`
      kill $PID 2>/dev/null; true
      SLEEP_COUNT=0
      while [ -e /proc/$PID ]; do
        sleep .25
        let "SLEEP_COUNT+=1"
        if(( "$SLEEP_COUNT" > $GRACE_TIME )); then
          echo "Stop wait time exceeded. Killing..."
          kill -9 $PID 2>/dev/null; true
          break
        fi
      done
      rm $PID_FILE
    else
      echo "No PID file found! Cannot stop $COMMAND_NAME"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    *)
        echo "Usage: $0 {start|stop}"
        exit 0
esac

exit $STATUS_RUNNING
